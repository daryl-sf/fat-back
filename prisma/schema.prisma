datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum RoleEnum {
  ADMIN
}

model User {
  id          String         @id @default(cuid())
  email       String         @unique
  displayName String?
  leagues     LeagueMember[]
  roles       UserRole[]

  password Password?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  votes     Vote[]
}

model Role {
  id    Int        @id @default(autoincrement())
  name  RoleEnum
  users UserRole[]
}

model UserRole {
  userId String
  roleId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([userId, roleId])
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model League {
  id         String         @id @default(cuid())
  name       String
  inviteCode String
  members    LeagueMember[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  votes     Vote[]
}

model LeagueMember {
  userId   String
  leagueId String
  joinedAt DateTime @default(now())
  isAdmin  Boolean  @default(false)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  league   League   @relation(fields: [leagueId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, leagueId])
}

model Team {
  id           String  @id @default(cuid())
  name         String
  shortName    String
  active       Boolean @default(false)
  imageUrl     String
  primaryColor String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  votes     Vote[]
}

model Vote {
  id       String @id @default(cuid())
  userId   String
  leagueId String
  teamId   String
  round    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  league League @relation(fields: [leagueId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
